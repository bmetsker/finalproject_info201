runApp('~/Desktop/Git/a7-bmetsker')
barplot(WorldPhones[,input$region]*1000,
main=input$region,
ylab="Number of Telephones",
xlab="Year")
barplot(WorldPhones,
main=input$region,
ylab="Number of Telephones",
xlab="Year")
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(shinythemes)
barplot(midwest,
main = input$state,
ylab = "Number of Telephones",
xlab = "Year")
barplot(WorldPhones,
main=input$region,
ylab="Number of Telephones",
xlab="Year")
barplot(midwest,
main = state,
ylab = "Number of Telephones",
xlab = "Year")
barplot(midwest,
main = state,
ylab = "Number of Telephones",
xlab = "Year")
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
c
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
ggplot(data = midwest,
mapping = aes(x = percollege)) +
geom_histogram(color = "darkblue", fill = "lightblue")
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('practice_app.R')
View(midwest)
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('practice_app.R')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp()
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
?aes_string
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
?geom_histogram
runApp('~/Desktop/Git/a7-bmetsker')
?hist
hist(midwest$input$x2)
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
?aes_string
?geom_point
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
runApp('~/Desktop/Git/a7-bmetsker')
shiny::runApp()
library("ggplot2")
library("plotly")
library("dplyr")
setwd("~/Desktop/INFO201/finalproject_info201")
library("ggplot2")
library("plotly")
library("dplyr")
runApp()
runApp()
setwd("~/Desktop/INFO201/finalproject_info201")
library("ggplot2")
library("plotly")
library("dplyr")
createDataFrame <- function(col) {
Technology <- read.csv("data/First_Trust_NASDAQ_100_Technology_Sector_Index_Fund_05022006_11072019.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(Technology) <- c("Date", paste("Technology", col))
ConsumerGoods <- read.csv("data/ProShares_Ultra_Consumer_Goods_02012007_11072019.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(ConsumerGoods) <- c("Date", paste("ConsumerGoods", col))
Healthcare <- read.csv("data/VHT.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(Healthcare) <- c("Date", paste("Healthcare", col))
RealEstate <- read.csv("data/ICF.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(RealEstate) <- c("Date", paste("RealEstate", col))
DataFrame <- ConsumerGoods %>%
inner_join(Technology) %>%
inner_join(Healthcare) %>%
inner_join(RealEstate)
}
VolumeGraph <- function(date1, date2, col, df) {
range <- filter(df, Date >= date1 & Date <= date2)
Volume_Change_Graph <- plot_ly(
data = range,
x = ~Date,
y = range[[col]],
type = "bar",
alpha = .7,
hovertext = "y"
) %>%
layout(
title = "Volume Rate of the Stocks",
xaxis = list(title = "Date"),
yaxis = list(title = paste(col, "Volume"))
)
}
runApp()
output$Metric2Graph <- renderPlotly(
VolumeGraph(input$Metric2Date[1], input$Metric2Date[2], paste(input$Metric2Stock,"Volume"), VolumeData)
)
runApp()
runApp()
library("ggplot2")
library("plotly")
library("dplyr")
createDataFrame <- function(col) {
Technology <- read.csv("data/First_Trust_NASDAQ_100_Technology_Sector_Index_Fund_05022006_11072019.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(Technology) <- c("Date", paste("Technology", col))
ConsumerGoods <- read.csv("data/ProShares_Ultra_Consumer_Goods_02012007_11072019.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(ConsumerGoods) <- c("Date", paste("ConsumerGoods", col))
Healthcare <- read.csv("data/VHT.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(Healthcare) <- c("Date", paste("Healthcare", col))
RealEstate <- read.csv("data/ICF.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(RealEstate) <- c("Date", paste("RealEstate", col))
DataFrame <- ConsumerGoods %>%
inner_join(Technology) %>%
inner_join(Healthcare) %>%
inner_join(RealEstate)
}
VolumeGraph <- function(date1, date2, col, df) {
range <- filter(df, Date >= date1 & Date <= date2)
Volume_Change_Graph <- plot_ly(
data = range,
x = ~Date,
y = range[[col]],
type = "bar",
alpha = .7,
hovertext = "y"
) %>%
layout(
title = "Volume Rate of the Stocks",
xaxis = list(title = "Date"),
yaxis = list(title = paste(col, "Volume"))
)
}
VolumeData <- createDataFrame("Volume")
shiny::runApp()
main_title <- print(HTML("<h1><center><font size=14> Federal Funds Rate Change Analysis </font></center></h1>"))
team_members <- HTML("<body><center> Angel Lin, Ben Metsker, Jimmy Peng, Jonathan Chen, Mary Truong </center></body>")
project_explanation_title <- HTML("<h3> Project Explanation </h3>")
project_explanation <- HTML("<body>
<br>
Throughout this project, we attempted to find a correlation between federal fund rate changes and different NYSE industry stock performance.
</br>
<br>
The federal funds rate is the interest rate at which banks borrow money from the fed. This number will often affect almost every other aspect of the economy in various ways.
</br>
<br>
Typically, the Federal Reserve Board (The Fed) will change this underlying rate to counteract recession or inflation. If the economy appears to be in a downturn or Bear Market, the fed will often lower interest rates to make borrowing more appealing to banks, companies, and consumers in order to stimulate the economy. This can have one or two effects on different industries stock performance. First, investors will be encouraged by the Fedâ€™s move and will put more money into the market, causing investment vessel prices to rise. Second, investors could become concerned the market will be turning bear quickly and begin to pull money out consistently, causing market prices to tank.
</br>
<br>
As clearly seen above, knowing exactly what the stock market like the NYSE will do during rate changes is impossible to predict. However, we believe that we can find a more accurate answers by looking at specific industries rather than the market as a whole.
</br>
</body>")
project_sources_title <- HTML("<h3> Sources Used </h3>")
sources_explanation <- HTML("<body>
<br>
The federal funds rate data that we chose to use comes from the St. Louis Fed website. The St. Louis Fed is a commonly used government data collection site. We filtered the results down to show only 2006 to 2019. This is a substantial amount of time that captures many ups and downs with FFR changes.
</br>
<br>
The market industry data that we selected comes from Yahoo Finance. The site allows us to select a date range which we matched to our FFR data. Wed selected a wide variety of industries that capture many different areas of the market including:
</br>
<br>
<ul>
<li>
Technology
</li>
<li>
Consumer Goods
</li>
</ul>
</br>
</body>")
runApp()
runApp()
library("ggplot2")
library("plotly")
library("dplyr")
createDataFrame <- function(col) {
Technology <- read.csv("data/First_Trust_NASDAQ_100_Technology_Sector_Index_Fund_05022006_11072019.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(Technology) <- c("Date", paste("Technology", col))
ConsumerGoods <- read.csv("data/ProShares_Ultra_Consumer_Goods_02012007_11072019.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(ConsumerGoods) <- c("Date", paste("ConsumerGoods", col))
Healthcare <- read.csv("data/VHT.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(Healthcare) <- c("Date", paste("Healthcare", col))
RealEstate <- read.csv("data/ICF.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(RealEstate) <- c("Date", paste("RealEstate", col))
DataFrame <- ConsumerGoods %>%
inner_join(Technology) %>%
inner_join(Healthcare) %>%
inner_join(RealEstate)
}
VolumeGraph <- function(date1, date2, col, df) {
range <- filter(df, Date >= date1 & Date <= date2)
Volume_Change_Graph <- plot_ly(
data = range,
x = ~Date,
y = range[[col]],
type = "bar",
alpha = .7,
hovertext = "y"
) %>%
layout(
title = "Volume Rate of the Stocks",
xaxis = list(title = "Date"),
yaxis = list(title = paste(col, "Volume"))
)
}
VolumeData <- createDataFrame("Volume")
runApp()
library("ggplot2")
library("plotly")
library("dplyr")
source("Metric1Analysis.R")
source("Matric2Analysis.R")
server <- function(input, output) {
output$Metric1Graph <- renderPlotly(
FedCompareGraph(input$Metric1Date[1], input$Metric1Date[2], paste(input$Metric1Stock,"Adj.Close"), AdjData)
)
output$Metric2Graph <- renderPlotly(
VolumeGraph(input$Metric2Date[1], input$Metric2Date[2], paste(input$Metric2Stock,"Volume"), VolumeData)
)
}
runApp()
source('~/Desktop/INFO201/finalproject_info201/Metric2Analysis.R')
runApp()
runApp()
library("ggplot2")
library("plotly")
library("dplyr")
createDataFrame <- function(col) {
Technology <- read.csv("data/First_Trust_NASDAQ_100_Technology_Sector_Index_Fund_05022006_11072019.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(Technology) <- c("Date", paste("Technology", col))
ConsumerGoods <- read.csv("data/ProShares_Ultra_Consumer_Goods_02012007_11072019.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(ConsumerGoods) <- c("Date", paste("ConsumerGoods", col))
Healthcare <- read.csv("data/VHT.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(Healthcare) <- c("Date", paste("Healthcare", col))
RealEstate <- read.csv("data/ICF.csv", stringsAsFactors = FALSE) %>%
select(Date, col)
colnames(RealEstate) <- c("Date", paste("RealEstate", col))
DataFrame <- ConsumerGoods %>%
inner_join(Technology) %>%
inner_join(Healthcare) %>%
inner_join(RealEstate)
}
VolumeGraph <- function(date1, date2, col, df) {
range <- filter(df, Date >= date1 & Date <= date2)
Volume_Change_Graph <- plot_ly(
data = range,
x = ~Date,
y = range[[col]],
type = "bar",
alpha = .7,
hovertext = "y"
) %>%
layout(
title = "Volume Rate of the Stocks",
xaxis = list(title = "Date"),
yaxis = list(title = paste(col, "Volume"))
)
}
VolumeData <- createDataFrame("Volume")
ui<- tagList(
navbarPage(
theme = shinytheme("flatly"),
"Federal Funds Rate Change Analysis Analysis",
tabPanel("Introduction",
HTML("<h1><center><font size=14> Federal Funds Rate Change Analysis </font></center></h1>
<body><center> Angel Lin, Ben Metsker, Jimmy Peng, Jonathan Chen, Mary Truong </center></body>
<h3> Project Explanation </h3>
<body>
<br>
Throughout this project, we attempted to find a correlation between federal fund rate changes and different NYSE industry stock performance.
</br>
<br>
The federal funds rate is the interest rate at which banks borrow money from the fed. This number will often affect almost every other aspect of the economy in various ways.
</br>
<br>
Typically, the Federal Reserve Board (The Fed) will change this underlying rate to counteract recession or inflation. If the economy appears to be in a downturn or Bear Market, the fed will often lower interest rates to make borrowing more appealing to banks, companies, and consumers in order to stimulate the economy. This can have one or two effects on different industries stock performance. First, investors will be encouraged by the Fedâ€™s move and will put more money into the market, causing investment vessel prices to rise. Second, investors could become concerned the market will be turning bear quickly and begin to pull money out consistently, causing market prices to tank.
</br>
<br>
As clearly seen above, knowing exactly what the stock market like the NYSE will do during rate changes is impossible to predict. However, we believe that we can find a more accurate answers by looking at specific industries rather than the market as a whole.
</br>
</body>
<h3> Major Takeaways </h3>
<body>
<br>
<ol type=1>
<li>
We found that there is definitely a correlation between Federal Funds Rate changes and stock performance. In all of the funds that we viewed, there is either a large dip or clime in price or activity whenever monetary policy is changed in a major way.
</li>
<li>
Point 2
</li>
<li>
Point 3
</li>
</ol>
</br>
</body>
<h3> Sources Used </h3>
<body>
<br>
The federal funds rate data that we chose to use comes from the St. Louis Fed website. The St. Louis Fed is a commonly used government data collection site. We filtered the results down to show only 2006 to 2019. This is a substantial amount of time that captures many ups and downs with FFR changes.
</br>
<br>
The market industry data that we selected comes from Yahoo Finance. The site allows us to select a date range which we matched to our FFR data. Wed selected a wide variety of industries that capture many different areas of the market including:
</br>
<br>
<ul>
<li>
Technology
</li>
<li>
Consumer Goods
</li>
<li>
Real Estate
</li>
<li>
Healthcare
</li>
</ul>
</br>
</body>")
),
tabPanel("Adjusted Close Price",
sidebarPanel(
dateRangeInput(
"Metric1Date",
h3("Date range"),
start = as.Date(0, origin = "2010-02-01"),
end = as.Date(0, origin = "2015-10-01"),
min = as.Date(0, origin = "2007-02-01"),
max = as.Date(0, origin = "2019-10-01")),
selectInput(
'Metric1Stock',
'Select Stock',
choices = c(
"ConsumerGoods",
"Technology",
"Healthcare",
"RealEstate"),
selected = "ConsumerGoods"),
),
mainPanel("Comparison Chart", plotlyOutput("Metric1Graph"),
HTML("<h4> Analysis </h4>
<body>
<br>
In this graph we visualize the changes between adjusted day close price and updates in the Federal Funds Rate. In 2008, the Mortgage Crisis forced the Federal Reserve board to cut rates drastically down to almost zero in order to stimulate consumer spending. All funds pictured in the graph reacted negatively to the shift.
</br>
<br>
In 2016, the Federal Reserve board began to raise rates once again, a sign of sturdy economic growth, and instantaneously, we are able to see stocks react in a very positive manner.
</br>
<br>
Consumer Goods saw the biggest jump when rates were raised once again. This is surprising because this industry typically is slower growth and less reactive to outside factors, hence their lower Beta score (a measure of reactivity).
</br>
</body>
")
)
),
tabPanel("Selling Volume",
sidebarPanel(
dateRangeInput(
"Metric2Date",
h3("Date range"),
start = as.Date(0, origin = "2010-02-01"),
end = as.Date(0, origin = "2015-10-01"),
min = as.Date(0, origin = "2007-02-01"),
max = as.Date(0, origin = "2019-10-01")),
radioButtons(
'Metric2Stock',
'Select Stock',
choices = c(
"ConsumerGoods",
"Technology",
"Healthcare",
"RealEstate"),
selected = "Technology"),
),
mainPanel("Volume Chart", plotlyOutput("Metric2Graph"),
)
),
tabPanel("Metric 3",
sidebarPanel(
dateRangeInput(
"Metric3Date",
h3("Date range"),
start = as.Date(0, origin = "2010-02-01"),
end = as.Date(0, origin = "2015-10-01"),
min = as.Date(0, origin = "2007-02-01"),
max = as.Date(0, origin = "2019-10-01")),
radioButtons(
'Metric3Stock',
'Select Stock',
choices = c(
"ProShares",
"Nasdaq",
"VHT",
"ICF"),
selected = "VHT"),
),
mainPanel("Fluctuation Chart", plotlyOutput("Metric3Graph"),
)
)
server <- function(input, output) {
output$Metric1Graph <- renderPlotly(
FedCompareGraph(input$Metric1Date[1], input$Metric1Date[2], paste(input$Metric1Stock,"Adj.Close"), AdjData)
)
output$Metric2Graph <- renderPlotly(
VolumeGraph(input$Metric2Date[1], input$Metric2Date[2], paste(input$Metric2Stock,"Volume"), VolumeData)
)
}
server <- function(input, output) {
output$Metric1Graph <- renderPlotly(
FedCompareGraph(input$Metric1Date[1], input$Metric1Date[2], paste(input$Metric1Stock,"Adj.Close"), AdjData)
)
output$Metric2Graph <- renderPlotly(
VolumeGraph(input$Metric2Date[1], input$Metric2Date[2], paste(input$Metric2Stock,"Volume"), VolumeData)
)
}
source("Matric2Analysis.R")
runApp()
